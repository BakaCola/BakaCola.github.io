<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Ansible部署，Ad-Hoc、Playbook的使用</title>
    <link href="/posts/c5767e27/"/>
    <url>/posts/c5767e27/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis集群部署</title>
    <link href="/posts/848e11b6/"/>
    <url>/posts/848e11b6/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
      <tag>Cluster</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>K3s+Kubesphere+Helm 部署</title>
    <link href="/posts/3af8157d/"/>
    <url>/posts/3af8157d/</url>
    
    <content type="html"><![CDATA[<h1 id="K3s-部署"><a href="#K3s-部署" class="headerlink" title="K3s 部署"></a>K3s 部署</h1><p>在实习的过程中接触到了K3s，故想将其部署流程记录在博客之中。以下的内容笔者在<code>Ubuntu 22.04</code>上进行部署操作。不同发行版可能操作会略有不同，请自行注意~</p><h2 id="Why-K3s？"><a href="#Why-K3s？" class="headerlink" title="Why K3s？"></a>Why K3s？</h2><blockquote><p>K3s 是轻量级的 Kubernetes。K3s 易于安装，仅需要 Kubernetes 内存的一半，所有组件都在一个小于 100 MB 的二进制文件中。</p></blockquote><p>对于一部分的服务器而言，其服务器性能可能不足以支撑K8S的运行，或者说想要把更多的计算资源给到自己想要运行的服务时，这时可以考虑选择K3S。相较于K8S，其所需要的硬件配置更低，具体可以在<a href="https://docs.k3s.io/zh/installation/requirements"><strong>这里</strong></a>查看K3S所需要的安装要求。以下截取了官网中对于硬件的最低建议：</p><table><thead><tr><th>Spec</th><th>最低</th><th>推荐</th></tr></thead><tbody><tr><td>CPU</td><td>1 核</td><td>2 核</td></tr><tr><td>内存</td><td>512 MB</td><td>1 GB</td></tr></tbody></table><p><strong>注意：</strong> K3S默认使用<strong>Sqlite</strong>作为默认存储机制的轻量级存储后端，使用<strong>containerd</strong>作为容器的运行环境。倘若要进行修改，可以在安装的时候加以参数进行设置，详细见<a href="#%E6%8C%87%E5%AE%9A%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%AE%89%E8%A3%85K3s">指定配置项安装K3s部分</a>。</p><h2 id="使用在线脚本进行部署"><a href="#使用在线脚本进行部署" class="headerlink" title="使用在线脚本进行部署"></a>使用在线脚本进行部署</h2><blockquote><p>参考连接：<a href="https://docs.k3s.io/zh/quick-start">https://docs.k3s.io/zh/quick-start</a></p></blockquote><p>使用官方源在线下载脚本并部署（速度较慢），</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sfL https://get.k3s.io | sh -<br></code></pre></td></tr></table></figure><p>或者使用镜像源下载脚本并使用国内镜像进行部署（推荐）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh -<br></code></pre></td></tr></table></figure><p>在执行安装时，同时也会安装其它一些应用程序，包括 <code>kubectl</code>、<code>crictl</code>、<code>ctr</code>、<code>k3s-killall.sh</code> 和 <code>k3s-uninstall.sh</code>。</p><h2 id="使用离线镜像进行部署"><a href="#使用离线镜像进行部署" class="headerlink" title="使用离线镜像进行部署"></a>使用离线镜像进行部署</h2><h2 id="指定配置项安装K3s"><a href="#指定配置项安装K3s" class="headerlink" title="指定配置项安装K3s"></a>指定配置项安装K3s</h2><blockquote><p>参考连接：<a href="https://docs.k3s.io/zh/installation/configuration">https://docs.k3s.io/zh/installation/configuration</a></p></blockquote><h3 id="部分可能用到的配置项："><a href="#部分可能用到的配置项：" class="headerlink" title="部分可能用到的配置项："></a>部分可能用到的配置项：</h3><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><table><thead><tr><th>Flag</th><th>环境变量</th><th>描述</th></tr></thead><tbody><tr><td><code>--datastore-endpoint</code> value</td><td>K3S_DATASTORE_ENDPOINT</td><td>指定 etcd、Mysql、Postgres 或 Sqlite（默认）数据源名称。</td></tr></tbody></table><h4 id="Agent"><a href="#Agent" class="headerlink" title="Agent"></a>Agent</h4><h5 id="Agent节点"><a href="#Agent节点" class="headerlink" title="Agent节点"></a>Agent节点</h5><table><thead><tr><th>Flag</th><th>环境变量</th><th>描述</th></tr></thead><tbody><tr><td>–node-name value</td><td>K3S_NODE_NAME</td><td>节点名称</td></tr></tbody></table><h5 id="Agent运行时"><a href="#Agent运行时" class="headerlink" title="Agent运行时"></a>Agent运行时</h5><table><thead><tr><th>Flag</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>--docker</code></td><td>-</td><td>用 docker 代替 containerd</td></tr><tr><td><code>--private-registry value</code></td><td>“&#x2F;etc&#x2F;rancher&#x2F;k3s&#x2F;registries.yaml”</td><td>私有镜像仓库配置文件</td></tr></tbody></table><h3 id="使用配置项进行安装"><a href="#使用配置项进行安装" class="headerlink" title="使用配置项进行安装"></a>使用配置项进行安装</h3><blockquote><p>参考连接：<a href="https://docs.k3s.io/zh/installation/configuration">https://docs.k3s.io/zh/installation/configuration</a></p></blockquote><p>要在安装时使用指定配置项进行K3S的安装，可以使用3种方式进行配置项的指定</p><h4 id="在执行安装脚本前指定配置项环境变量的值"><a href="#在执行安装脚本前指定配置项环境变量的值" class="headerlink" title="在执行安装脚本前指定配置项环境变量的值"></a>在执行安装脚本前指定配置项环境变量的值</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn K3S_DATASTORE_ENDPOINT=etcd sh -<br></code></pre></td></tr></table></figure><h4 id="在执行安装脚本前使用INSTALL-K3S-EXEC指定安装的参数"><a href="#在执行安装脚本前使用INSTALL-K3S-EXEC指定安装的参数" class="headerlink" title="在执行安装脚本前使用INSTALL_K3S_EXEC指定安装的参数"></a>在执行安装脚本前使用<code>INSTALL_K3S_EXEC</code>指定安装的参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn  sh -<br></code></pre></td></tr></table></figure><h2 id="卸载K3s"><a href="#卸载K3s" class="headerlink" title="卸载K3s"></a>卸载K3s</h2><p>若使用的为脚本安装方式，则在安装过程中会生成一个卸载脚本，该脚本为于</p><p><code>/usr/local/bin/k3s-uninstall.sh</code>或者<code>/usr/local/bin/k3s-uninstall.sh</code></p><p>可以通过以下指令卸载K3S：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash /usr/local/bin/k3s-uninstall.sh<br><span class="hljs-comment"># 或者使用以下指令</span><br>bash /usr/local/bin/k3s-uninstall.sh<br></code></pre></td></tr></table></figure><h1 id="在K3s上部署Kubesphere"><a href="#在K3s上部署Kubesphere" class="headerlink" title="在K3s上部署Kubesphere"></a>在K3s上部署Kubesphere</h1><h2 id="安装Kubesphere"><a href="#安装Kubesphere" class="headerlink" title="安装Kubesphere"></a>安装Kubesphere</h2><blockquote><p>参考连接：<a href="https://www.kubesphere.io/zh/docs/v3.4/installing-on-kubernetes/introduction/overview/">https://www.kubesphere.io/zh/docs/v3.4/installing-on-kubernetes/introduction/overview/</a></p></blockquote><ol><li>在完成K3s的安装后，可以通过使用kubectl应用配置文件，来实现Kubesphere的安装。具体指令如下所示：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl apply -f https://github.com/kubesphere/ks-installer/releases/download/v3.4.0/kubesphere-installer.yaml<br>kubectl apply -f https://github.com/kubesphere/ks-installer/releases/download/v3.4.0/cluster-configuration.yaml<br></code></pre></td></tr></table></figure><ol start="2"><li>通过检查安装日志，来查看Kubesphere安装情况：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l <span class="hljs-string">&#x27;app in (ks-install, ks-installer)&#x27;</span> -o jsonpath=<span class="hljs-string">&#x27;&#123;.items[0].metadata.name&#125;&#x27;</span>) -f<br></code></pre></td></tr></table></figure><p>通过检查日志，应该可以看到如下的日志信息：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">#####################################################<br>###              Welcome to KubeSphere!           ###<br>#####################################################<br><br>Console: http://192.168.1.100:30880<br>Account: admin<br>Password: P@88w0rd<br>NOTES：<br>  1. After you log into the console, please check the<br>     monitoring status of service components in<br>     &quot;Cluster Management&quot;. If any service is not<br>     ready, please wait patiently until all components<br>     are up and running.<br>  2. Please change the default password after login.<br><br>#####################################################<br>https://kubesphere.io             2023-11-10 10:27:52<br>#####################################################<br></code></pre></td></tr></table></figure><p>其中可以找到访问Kubesphere的网址<code>http://192.168.1.100:30880</code>，以及对应的默认用户名<code>admin</code>和默认密码<code>P@88w0rd</code></p><ol start="3"><li>使用 <code>kubectl get pod --all-namespaces</code> 查看所有 Pod 在 KubeSphere 相关的命名空间是否正常运行。如果是正常运行，请通过以下命令来检查控制台的端口（默认为 30880）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubectl get svc/ks-console -n kubesphere-system<br></code></pre></td></tr></table></figure><ol start="4"><li>确保在安全组中打开了 30880 端口，通过 NodePort (<code>IP:30880</code>) 使用默认帐户和密码 (<code>admin/P@88w0rd</code>) 访问 Web 控制台。</li></ol><h2 id="卸载Kubesphere"><a href="#卸载Kubesphere" class="headerlink" title="卸载Kubesphere"></a>卸载Kubesphere</h2><blockquote><p>参考连接：<a href="https://www.kubesphere.io/zh/docs/v3.4/installing-on-kubernetes/uninstall-kubesphere-from-k8s/">https://www.kubesphere.io/zh/docs/v3.4/installing-on-kubernetes/uninstall-kubesphere-from-k8s/</a></p></blockquote><p>使用</p><p>具体内容如下：</p><h1 id="Helm部署"><a href="#Helm部署" class="headerlink" title="Helm部署"></a>Helm部署</h1><h3 id="安装Helm"><a href="#安装Helm" class="headerlink" title="安装Helm"></a>安装Helm</h3><blockquote><p>参考连接：<a href="https://helm.sh/zh/docs/intro/install/">https://helm.sh/zh/docs/intro/install/</a></p></blockquote><ol><li>从Github上下载所需要的Helm版本对应文件，下载链接：<a href="https://github.com/helm/helm/releases%EF%BC%8C%E6%88%96%E5%9C%A8%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87%E4%B8%8A%E4%B8%8B%E8%BD%BD%E5%AE%8C%E5%AF%B9%E5%BA%94%E7%9A%84Helm%E5%AE%89%E8%A3%85%E5%8C%85%E5%90%8E%E4%BC%A0%E8%BE%93%E5%88%B0%E5%BE%85%E5%AE%89%E8%A3%85Helm%E7%9A%84%E8%AE%BE%E5%A4%87%E4%B8%8A">https://github.com/helm/helm/releases，或在其它设备上下载完对应的Helm安装包后传输到待安装Helm的设备上</a></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -O https://get.helm.sh/helm-v3.13.2-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><ol start="2"><li>解压所下载的安装包：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf helm-v3.13.2-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><ol start="3"><li>将解压完成后的文件移动到<code>/usr/local/bin/</code>目录下</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> linux-amd64/helm /usr/local/bin/helm<br></code></pre></td></tr></table></figure><p><strong>注意</strong>：在安装完Helm后，应该指定KUBECONFIG环境变量指向K3S的配置文件，否则在使用helm时可能出现无法正常使用的情况。</p><blockquote><p>参考连接：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> KUBECONFIG=/etc/rancher/k3s/k3s.yaml<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>K3s</tag>
      
      <tag>Kubesphere</tag>
      
      <tag>Helm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello-world</title>
    <link href="/posts/b1d4025b/"/>
    <url>/posts/b1d4025b/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
